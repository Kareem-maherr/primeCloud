rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    match /folders/{folderId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        resource.data.sharedWith.hasAny([request.auth.token.email])
      );
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        request.resource.data.userId == resource.data.userId
      );
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /files/{fileId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && exists(/databases/$(database)/documents/folders/$(resource.data.folderId)) && (
        get(/databases/$(database)/documents/folders/$(resource.data.folderId)).data.userId == request.auth.uid ||
        get(/databases/$(database)/documents/folders/$(resource.data.folderId)).data.sharedWith.hasAny([request.auth.token.email])
      );
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
